

import java.io.File;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;


public class ReportPdf {
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public ReportPdf(File selectedDir) {
    	try {   
    		Date date = new Date(); // This object contains the current date value
    		SimpleDateFormat formatter = new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss");
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(selectedDir+"\\"+"report_"+formatter.format(date)+".pdf"));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("ExtraSnmp");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("ExtraSnmp");
        document.addCreator("ExtraSnmp");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("EXTRA SNMP", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
                "Rapport trap ",
                smallBold));
        addEmptyLine(preface, 1);
        document.add(preface);
        // Start a new page
        //document.newPage();
        createTable(document);

    }

    private static ArrayList<Trap> sqltable() {
    	 Trap t;
	     ArrayList<Trap> alTrap = new ArrayList();
 	    java.util.Date date = new Date();
 		Object param = new java.sql.Date(date.getTime());
    	  Connection con=(Connection) DbConnection.getConnection();
			Statement stmt = null;
			try {
				stmt = (Statement) con.createStatement();
				ResultSet rs=stmt.executeQuery("SELECT oid.id_oid,IP,text_oid,Date_time FROM oid,agent,posseder where oid.id_oid=posseder.id_oid and posseder.ID=agent.ID ORDER BY Date_Time ASC");
				while(rs.next()) {
				        t= new Trap(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4).toString());
				        if(t.getDate_Time().contains(param.toString())) alTrap.add(t);
				}
				}
				catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
    	return alTrap;
    }
    
    private static void createTable(Document document)
            throws BadElementException {
        PdfPTable table = new PdfPTable(3);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

        PdfPCell c1 = new PdfPCell(new Phrase("Adresse ip"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Trap"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Date/Time"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);
	     ArrayList<Trap> al = new ArrayList();
         al=sqltable();
        for(Trap t: al)
        {
        table.addCell(t.getIp_port());
        table.addCell(t.getMsg_trap());
        table.addCell(t.getDate_Time());
        }
        try {
			document.add(table);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

    }


    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(""));
        }
    }
}